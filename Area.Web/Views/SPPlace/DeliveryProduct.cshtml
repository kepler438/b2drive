@using Area.Data;
@using System.Data.Entity;
@model List<Area.Data.ProductRecivedDelivered>
@{
    ViewBag.Title = "DeliveryProduct";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var checkinInfo = ViewData["supervisorVisitPlace"] as SupervisorVisitPlace;
    B2DriveForPostEntities db = new B2DriveForPostEntities();
    var editProduct = TempData["EditProduct"] as Area.Data.ProductRecivedDelivered;
    SelectList productList = null;
    SelectList procutSubCategoryList = null;
    SelectList productCategoryList = null;
    if (editProduct != null)
    {
        var productEntity = db.Products.Where(p => p.ID == editProduct.ProductID).FirstOrDefault();
        var subCategoryList = db.ProductSubCategories.Where(p => p.CategoryID == productEntity.SubCategoryID).ToList();
        productList = new SelectList(db.Products.Where(p => p.SubCategoryID == productEntity.SubCategoryID && p.IsActive == true), "ID", "Name", productEntity.ID);

        procutSubCategoryList = new SelectList(db.ProductSubCategories.Where(p => p.CategoryID == productEntity.ProductSubCategory.CategoryID && p.IsActive == true), "ID", "Name", productEntity.ProductSubCategory.ID);

        productCategoryList = new SelectList(db.ProductCategories.Where(p => p.IsActive == true), "ID", "Name", productEntity.ProductSubCategory.CategoryID);
    }
}

<div class="span12">
    <div class="widget ">
        <div class="widget-header">
            <i class="icon-user"></i>
            <h3>Firmaya teslim edilen ürünler</h3>
        </div>
        <div class="widget-content">
            <div class="tabbable">
                <div class="tab-content">
                    <table class="table table-striped table-bordered">
                        <thead>
                            <tr>
                                <th> Kategori </th>
                                <th> Alt Kategori </th>
                                <th> Ürün </th>
                                <th> Adet </th>
                                <th> Not </th>
                                <th class="td-actions"> İşlemler </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>@item.Product.ProductSubCategory.ProductCategory.Name </td>
                                    <td>@item.Product.ProductSubCategory.Name </td>
                                    <td>@item.Product.Name  </td>
                                    <td>@item.Quantity</td>
                                    <td>@item.Note</td>
                                    <td class="td-actions">
                                        <a href="/spplace/edit/@item.ID" class="btn btn-success btn-small">
                                            <i class="btn-icon-only icon-edit"> </i>
                                        </a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

</div>
<script type="text/javascript">

    if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(showPosition, showError);
    }
    else { $("#message").html("Geolocation, bu tarayıcı tarafından desteklenmiyor."); }

    function showPosition(position) {
        $("#latitude").val(position.coords.latitude);
        $("#longitude").val(position.coords.longitude);
    }
    function showError(error) {
        if (error.code == 1) {
            //$("#message").html("Kullanıcı, Coğrafi Konum talebini reddetti.");
        }
        else if (error.code == 2) {
            //$("#message").html("Konum bilgisi kullanılamıyor.");
        }
        else if (error.code == 3) {
            //$("#message").html("Kullanıcı konumunu elde etme isteği zaman aşımına uğradı.");
        }
        else {
            //$("#message").html("Bilinmeyen bir hata oluştu.");
        }
    }


    $(document).ready(function () {
        $("#ProductCategory").change(function () {
            $("#ProductSubCategory").empty();
            $("#ProductSubCategory").append('<option value="0">Lütfen Alt Ürün Seçiniz</option>');
            $("#ProductID").empty();
            $("#ProductID").append('<option value="0">Lütfen Ürün Seçiniz</option>');
            $.ajax({
                type: 'POST',
                url: '/receivedproducts/GetSubCategories',
                dataType: 'json',
                data: { categoryid: $("#ProductCategory").val() },
                success: function (productsubcategories) {
                    $.each(productsubcategories, function (i, productsubcategories) {
                        $("#ProductSubCategory").append('<option value="' + productsubcategories.Value + '">' +
                            productsubcategories.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Bir Hata oluştu' + ex);
                }
            });
            return false;
        })

        $("#ProductSubCategory").change(function () {
            $("#ProductID").empty();
            $("#ProductID").append('<option value="0">Lütfen Ürün Seçiniz</option>');
            $.ajax({
                type: 'POST',
                url: '/receivedproducts/GetProducts',
                dataType: 'json',
                data: { subcategoryid: $("#ProductSubCategory").val() },
                success: function (products) {
                    $.each(products, function (i, products) {
                        $("#ProductID").append('<option value="' + products.Value + '">' +
                            products.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Bir Hata oluştu' + ex);
                }
            });
            return false;
        })
    });
</script>

